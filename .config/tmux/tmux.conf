unbind C-b
set-option -g prefix C-q
bind-key C-q send-prefix

unbind '"'
unbind %
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

unbind -T copy-mode-vi Space
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind r source-file ~/.config/tmux/tmux.conf \; display "config reloaded"

set -sg escape-time 0
set -g mouse on
set -g history-limit 100000
set -g base-index 1
set -g status-justify left
# set -g status-interval 2
set-window-option -g pane-base-index 1
set-window-option -g mode-keys vi

r=\ue0b4  # left
l=\ue0b6  # right
a=#cccccc # accent
d=#000000 # dark
p=#719cd6 # primary
s=#2f4159 # secondary
set -g mode-style fg=$a
set -g message-style fg=$a
set -g message-command-style fg=$a
set -g pane-border-style fg=$p
set -g pane-active-border-style fg=$p
set -g status-style fg=$a
set -g status-justify left
set -g status-right-length 100
set -g status-left-length 100
set -g status-right "#[fg=$s]$l#[bg=$s,fg=$a] #{user}@#H #[fg=$p]$l#[fg=$d,bg=$p,bold] %H:%M %a %d.%m.%y#[fg=$p,bg=default]$r"
set -g status-left  "#[fg=$p]$l#[fg=$d,bold,bg=$p]#{session_name}#[fg=$p,bg=default]$r "
set -g status-keys vi
set-window-option -g window-status-activity-style ''
set-window-option -g window-status-separator ''
set-window-option -g window-status-style ''
set-window-option -g window-status-format " #I #W "
set-window-option -g window-status-current-format "#[fg=$s]$l#[bg=$s,fg=$a]#I #W#[fg=$s,bg=0]$r"
